
CLASS HIERARCHY

_______
PACKAGES
--------

package IC:

> Compiler.java -
     Now runs the semantic checks.
     Adds the Library class as a class in the program.
     Then it runs the different semantic checkers one by one:

package IC.Semantic:
     1. SymbolTableBuilder:
        Traverses the AST once, builds the Symbol Table and the Type Table.
     2. ScopeChecker
        Traverses the AST a second time, checks that every symbol used is defined earlier.
     3. TypeChecker
        Traverses the AST, checks all of the different type rules.
     4. SingleMainValidator
        Traverses the AST - validates single main function
     5. BreakContinueValidator
        Traverses the AST - validates break, this, and continue context
     
package IC.Symbols:
  Symbol (contains Kind)
  SymbolTable
     \-- GlobalSymbolTable
     \-- ClassSymbolTable
     \-- MethodSymbolTable
     \-- StatementBlockSymbolTable
  SymbolTableException
  
package IC.SymbolTypes:
  SymbolType
     \-- PrimitiveSymbolType
     \-- ClassSymbolType
     \-- ArraySymbolType
     \-- MethodSymbolType
  SymbolTypeTable

________________
TESTING STRATEGY

Compare with given examples output.
Couldn't understand the example's traversing order so... i have my own order.
_______________
ERROR REPORTING

For each error, we trid to show some informative info: exactly what happened,and what were the involved types.

_____________________________
DESIGN/IMPLEMENTATION CHOICES

1. Each step of the semantic checks (almost) is done in its own Visitor.

2. There's a Scope checker and a Type checker. Sometimes it's hard to tell the problem...

3. Main function validator is implemented in an AST visitor. ol table was built).
   
